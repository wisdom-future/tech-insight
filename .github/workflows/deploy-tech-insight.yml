name: 🚀 Tech Insight System - Complete Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      setup_mode:
        description: 'Setup Mode'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - frontend-only
        - data-only
  schedule:
    - cron: '0 0 * * *'

env:
  NODE_VERSION: '18'

jobs:
  # 单一任务：构建和部署
  build-and-deploy:
    runs-on: ubuntu-latest
    name: 🏗️ Build and Deploy Tech Insight
    permissions:
      contents: read
      pages: write
      id-token: write
      actions: read
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Create Project Structure
        run: |
          echo "📁 Creating project structure..."
          
          # 创建目录结构
          mkdir -p src/{components/{common,charts,layout},views/System,router,store,utils,assets/{images,styles}}
          mkdir -p public
          mkdir -p data/{overview,collection,analysis,action,system,reports}
          
          # 生成 package.json (移除 type: module)
          cat > package.json << 'EOF'
          {
            "name": "tech-insight",
            "version": "1.0.0",
            "description": "ICT技术情报决策引擎",
            "scripts": {
              "dev": "vite",
              "build": "vite build",
              "preview": "vite preview"
            },
            "dependencies": {
              "vue": "^3.4.0",
              "vue-router": "^4.2.5",
              "pinia": "^2.1.7",
              "axios": "^1.6.0",
              "dayjs": "^1.11.10",
              "echarts": "^5.4.3",
              "vue-echarts": "^6.6.1",
              "element-plus": "^2.4.4",
              "@element-plus/icons-vue": "^2.3.1"
            },
            "devDependencies": {
              "@vitejs/plugin-vue": "^4.5.2",
              "vite": "^5.0.8",
              "tailwindcss": "^3.4.0",
              "autoprefixer": "^10.4.16",
              "postcss": "^8.4.32"
            }
          }
          EOF
          
          # 生成 vite.config.js
          cat > vite.config.js << 'EOF'
          import { defineConfig } from 'vite'
          import vue from '@vitejs/plugin-vue'
          import { resolve } from 'path'

          export default defineConfig({
            plugins: [vue()],
            base: '/tech-insight/',
            resolve: {
              alias: {
                '@': resolve(__dirname, 'src')
              }
            },
            build: {
              outDir: 'dist',
              assetsDir: 'assets'
            },
            server: {
              port: 3000,
              host: true
            }
          })
          EOF
          
          # 生成 postcss.config.js
          cat > postcss.config.js << 'EOF'
          module.exports = {
            plugins: {
              tailwindcss: {},
              autoprefixer: {},
            },
          }
          EOF
          
          # 生成 tailwind.config.js
          cat > tailwind.config.js << 'EOF'
          module.exports = {
            content: [
              "./index.html",
              "./src/**/*.{vue,js,ts,jsx,tsx}",
            ],
            theme: {
              extend: {
                colors: {
                  primary: {
                    50: '#eff6ff',
                    500: '#3b82f6',
                    600: '#2563eb',
                    700: '#1d4ed8',
                  }
                }
              }
            },
            plugins: []
          }
          EOF
          
          # 生成 index.html
          cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="zh-CN">
          <head>
            <meta charset="UTF-8" />
            <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <title>ICT技术情报决策引擎</title>
          </head>
          <body>
            <div id="app"></div>
            <script type="module" src="/src/main.js"></script>
          </body>
          </html>
          EOF

      - name: Create Vue Application Files
        run: |
          echo "🔧 Creating Vue.js application..."
          
          # 生成 src/main.js
          cat > src/main.js << 'EOF'
          import { createApp } from 'vue'
          import { createPinia } from 'pinia'
          import ElementPlus from 'element-plus'
          import 'element-plus/dist/index.css'
          import * as ElementPlusIconsVue from '@element-plus/icons-vue'
          import App from './App.vue'
          import router from './router'
          import './assets/styles/main.css'

          const app = createApp(App)
          const pinia = createPinia()

          for (const [key, component] of Object.entries(ElementPlusIconsVue)) {
            app.component(key, component)
          }

          app.use(pinia)
          app.use(router)
          app.use(ElementPlus)
          app.mount('#app')
          EOF
          
          # 生成 src/App.vue
          cat > src/App.vue << 'EOF'
          <template>
            <div id="app" class="min-h-screen bg-gray-50">
              <Header />
              <div class="flex">
                <Sidebar />
                <main class="flex-1 p-6">
                  <router-view />
                </main>
              </div>
              <Footer />
            </div>
          </template>

          <script setup>
          import Header from '@/components/layout/Header.vue'
          import Sidebar from '@/components/layout/Sidebar.vue'
          import Footer from '@/components/layout/Footer.vue'
          </script>
          EOF
          
          # 生成路由文件
          cat > src/router/index.js << 'EOF'
          import { createRouter, createWebHistory } from 'vue-router'
          import Overview from '@/views/Overview.vue'
          import Collection from '@/views/Collection.vue'
          import Analysis from '@/views/Analysis.vue'
          import Action from '@/views/Action.vue'
          import Reports from '@/views/Reports.vue'

          const routes = [
            { path: '/', name: 'Overview', component: Overview, meta: { title: '概览总览' } },
            { path: '/collection', name: 'Collection', component: Collection, meta: { title: '数据采集' } },
            { path: '/analysis', name: 'Analysis', component: Analysis, meta: { title: '情报分析' } },
            { path: '/action', name: 'Action', component: Action, meta: { title: '行动建议' } },
            { path: '/reports', name: 'Reports', component: Reports, meta: { title: '报告中心' } }
          ]

          const router = createRouter({
            history: createWebHistory('/tech-insight/'),
            routes
          })

          export default router
          EOF

      - name: Create Components and Views
        run: |
          echo "📦 Creating components and views..."
          
          # 创建布局组件
          cat > src/components/layout/Header.vue << 'EOF'
          <template>
            <header class="bg-white shadow-sm border-b border-gray-200">
              <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between h-16">
                  <div class="flex items-center">
                    <h1 class="text-xl font-semibold text-gray-900">ICT技术情报决策引擎</h1>
                  </div>
                  <div class="flex items-center space-x-4">
                    <span class="text-sm text-gray-500">{{ currentTime }}</span>
                  </div>
                </div>
              </div>
            </header>
          </template>

          <script setup>
          import { ref, onMounted } from 'vue'
          import dayjs from 'dayjs'

          const currentTime = ref('')

          onMounted(() => {
            setInterval(() => {
              currentTime.value = dayjs().format('YYYY-MM-DD HH:mm:ss')
            }, 1000)
          })
          </script>
          EOF
          
          cat > src/components/layout/Sidebar.vue << 'EOF'
          <template>
            <aside class="w-64 bg-white shadow-sm">
              <nav class="mt-5 px-2">
                <router-link
                  v-for="item in navigation"
                  :key="item.name"
                  :to="item.href"
                  class="group flex items-center px-2 py-2 text-base font-medium rounded-md"
                  :class="$route.name === item.name ? 'bg-blue-100 text-blue-700' : 'text-gray-600 hover:bg-gray-50'"
                >
                  <span class="mr-3">{{ item.icon }}</span>
                  {{ item.title }}
                </router-link>
              </nav>
            </aside>
          </template>

          <script setup>
          const navigation = [
            { name: 'Overview', title: '概览总览', href: '/', icon: '📊' },
            { name: 'Collection', title: '数据采集', href: '/collection', icon: '📥' },
            { name: 'Analysis', title: '情报分析', href: '/analysis', icon: '🧠' },
            { name: 'Action', title: '行动建议', href: '/action', icon: '🎯' },
            { name: 'Reports', title: '报告中心', href: '/reports', icon: '📋' }
          ]
          </script>
          EOF
          
          cat > src/components/layout/Footer.vue << 'EOF'
          <template>
            <footer class="bg-white border-t border-gray-200">
              <div class="max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8">
                <p class="text-center text-sm text-gray-500">
                  © 2025 ICT技术情报决策引擎. Powered by Vue.js & GitHub Pages.
                </p>
              </div>
            </footer>
          </template>
          EOF

      - name: Create View Pages
        run: |
          echo "📄 Creating view pages..."
          
          # Overview页面
          cat > src/views/Overview.vue << 'EOF'
          <template>
            <div class="space-y-6">
              <div class="bg-white overflow-hidden shadow rounded-lg">
                <div class="p-5">
                  <h3 class="text-lg leading-6 font-medium text-gray-900">系统概览</h3>
                  <div class="mt-2 max-w-xl text-sm text-gray-500">
                    <p>技术情报决策引擎运行状态总览</p>
                  </div>
                </div>
                <div class="bg-gray-50 px-5 py-3">
                  <div class="text-sm">
                    <span class="font-medium text-gray-900">状态：</span>
                    <span class="text-green-600">运行正常</span>
                  </div>
                </div>
              </div>
            </div>
          </template>
          EOF
          
          # Collection页面
          cat > src/views/Collection.vue << 'EOF'
          <template>
            <div class="space-y-6">
              <div class="bg-white overflow-hidden shadow rounded-lg">
                <div class="p-5">
                  <h3 class="text-lg leading-6 font-medium text-gray-900">数据采集状态</h3>
                  <div class="mt-4 grid grid-cols-1 gap-4 sm:grid-cols-2">
                    <div class="bg-blue-50 overflow-hidden shadow rounded-lg">
                      <div class="p-5">
                        <div class="flex items-center">
                          <div class="flex-shrink-0">
                            <span class="text-2xl">📚</span>
                          </div>
                          <div class="ml-5 w-0 flex-1">
                            <dl>
                              <dt class="text-sm font-medium text-gray-500 truncate">学术论文</dt>
                              <dd class="text-lg font-medium text-gray-900">1,250 条</dd>
                            </dl>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="bg-green-50 overflow-hidden shadow rounded-lg">
                      <div class="p-5">
                        <div class="flex items-center">
                          <div class="flex-shrink-0">
                            <span class="text-2xl">🔬</span>
                          </div>
                          <div class="ml-5 w-0 flex-1">
                            <dl>
                              <dt class="text-sm font-medium text-gray-500 truncate">专利数据</dt>
                              <dd class="text-lg font-medium text-gray-900">3,420 条</dd>
                            </dl>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </template>
          EOF
          
          # 其他页面
          cat > src/views/Analysis.vue << 'EOF'
          <template>
            <div class="space-y-6">
              <div class="bg-white overflow-hidden shadow rounded-lg">
                <div class="p-5">
                  <h3 class="text-lg leading-6 font-medium text-gray-900">情报分析</h3>
                  <p class="mt-1 text-sm text-gray-600">技术情报深度分析结果</p>
                </div>
              </div>
            </div>
          </template>
          EOF
          
          cat > src/views/Action.vue << 'EOF'
          <template>
            <div class="space-y-6">
              <div class="bg-white overflow-hidden shadow rounded-lg">
                <div class="p-5">
                  <h3 class="text-lg leading-6 font-medium text-gray-900">行动建议</h3>
                  <p class="mt-1 text-sm text-gray-600">基于情报分析的决策建议</p>
                </div>
              </div>
            </div>
          </template>
          EOF
          
          cat > src/views/Reports.vue << 'EOF'
          <template>
            <div class="space-y-6">
              <div class="bg-white overflow-hidden shadow rounded-lg">
                <div class="p-5">
                  <h3 class="text-lg leading-6 font-medium text-gray-900">报告中心</h3>
                  <p class="mt-1 text-sm text-gray-600">生成和查看各类分析报告</p>
                </div>
              </div>
            </div>
          </template>
          EOF

      - name: Create CSS and Assets
        run: |
          echo "🎨 Creating styles and assets..."
          
          cat > src/assets/styles/main.css << 'EOF'
          @tailwind base;
          @tailwind components;
          @tailwind utilities;

          body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
          }
          EOF
          
          # 创建favicon
          echo "Creating favicon..."
          # 这里可以添加favicon文件，暂时跳过

      - name: Create Sample Data
        run: |
          echo "📊 Creating sample data..."
          
          cat > data/collection/tech-data-status.json << 'EOF'
          {
            "lastUpdated": "2025-06-23T10:00:00Z",
            "techData": {
              "academicPapers": {
                "title": "学术论文",
                "icon": "📚",
                "status": "active",
                "todayCount": 45,
                "totalCount": 1250,
                "successRate": 98.5,
                "trendData": [30, 35, 42, 38, 45]
              },
              "patentData": {
                "title": "专利数据", 
                "icon": "🔬",
                "status": "active",
                "todayCount": 78,
                "totalCount": 3420,
                "successRate": 96.8,
                "trendData": [65, 70, 75, 72, 78]
              }
            }
          }
          EOF

      - name: Install Dependencies
        run: |
          echo "📦 Installing dependencies..."
          npm install

      - name: Build Application
        run: |
          echo "🔨 Building application..."
          echo "📁 Current directory contents:"
          ls -la
          echo "📁 Source directory contents:"
          ls -la src/
          echo "📄 Package.json contents:"
          cat package.json
          echo "🔧 Running build..."
          npm run build
          echo "📁 Build output:"
          ls -la dist/
          echo "📄 Built index.html:"
          cat dist/index.html || echo "No index.html found in dist/"
        env:
          NODE_ENV: production

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          enablement: true

            - name: Verify Build Output
        run: |
          echo "🔍 Verifying build output..."
          if [ ! -d "dist" ]; then
            echo "❌ dist directory not found!"
            exit 1
          fi
          if [ ! -f "dist/index.html" ]; then
            echo "❌ index.html not found in dist!"
            exit 1
          fi
          echo "✅ Build verification passed"
          echo "📊 Dist directory size:"
          du -sh dist/
          echo "📄 Files in dist:"
          find dist/ -type f -name "*.html" -o -name "*.js" -o -name "*.css" | head -10

      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment Complete
        run: |
          echo "🎉 部署完成！"
          echo "🌐 访问地址: ${{ steps.deployment.outputs.page_url }}"
